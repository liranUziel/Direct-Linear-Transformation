k1,k2,k3,p1,p2,r,u,v,x,y = var('k1, k2, k3, p1, p2, r, u, v, x, y')
solve([x==u*(1+k1*r^2+k2*r^4+k3*r^6)+2*p1*u*v+p2*(r^2+2*u^2),y==v*(1+k1*r^2+k2*r^4+k3*r^6)+p1*(r^2+2*v^2)+2*p2*u*v],u,v)

rad,r,u,v,x,y = var('rad, r, u, v, x, y')
solve([x==u*rad+2*p1*u*v+p2*(r^2+2*u^2),y==v*rad+p1*(r^2+2*v^2)+2*p2*u*v],u,v)



u == 1/2*(4*(p1^2*p2 + p2^3)*r^4 - p2*r^2*rad^2 - sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p2*r^2*rad + 4*p2*x^2 - (4*(p1^2 + 2*p2^2)*r^2 - rad^2 - sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*rad)*x - 4*(p1*p2*r^2 - p1*x)*y)/((p1^2 + p2^2)*r^2*rad + (sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p1^2 + sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p2^2)*r^2 - (p2*rad + sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p2)*x - (p1*rad + sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p1)*y)

v == -1/4*(p1*r^2*rad - rad*y + sqrt(-8*(p1^2 + p2^2)*r^2 + rad^2 + 8*p2*x + 8*p1*y)*(p1*r^2 - y))/((p1^2 + p2^2)*r^2 - p2*x - p1*y)

u == 1/2*(4*(p1^2*p2 + p2^3)*r^4 - p2*r^2*rad^2 + sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p2*r^2*rad + 4*p2*x^2 - (4*(p1^2 + 2*p2^2)*r^2 - rad^2 + sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*rad)*x - 4*(p1*p2*r^2 - p1*x)*y)/((p1^2 + p2^2)*r^2*rad - (sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p1^2 + sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p2^2)*r^2 - (p2*rad - sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p2)*x - (p1*rad - sqrt(-8*p1^2*r^2 - 8*p2^2*r^2 + rad^2 + 8*p2*x + 8*p1*y)*p1)*y)

v == -1/4*(p1*r^2*rad - rad*y - sqrt(-8*(p1^2 + p2^2)*r^2 + rad^2 + 8*p2*x + 8*p1*y)*(p1*r^2 - y))/((p1^2 + p2^2)*r^2 - p2*x - p1*y)




[[u == -1/2*(k3^2*p2*r^14 + 2*k2*k3*p2*r^12 + (k2^2 + 2*k1*k3)*p2*r^10 + (2*k1*k2 + k3*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 2))*p2*r^8 + (k1^2 + k2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 2))*p2*r^6 - (4*p2^3 + (4*p1^2 - k1*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 2))*p2)*r^4 + p2*r^2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 1) - 4*p2*x^2 - (k3^2*r^12 + 2*k2*k3*r^10 + (k2^2 + 2*k1*k3)*r^8 + (2*k1*k2 + k3*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 2))*r^6 + (k1^2 + k2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 2))*r^4 - (4*p1^2 + 8*p2^2 - k1*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 2))*r^2 + sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 1)*x + 4*(p1*p2*r^2 - p1*x)*y)/((k3*p1^2 + k3*p2^2)*r^8 + (k2*p1^2 + k2*p2^2)*r^6 + (k1*p1^2 + k1*p2^2)*r^4 + (p1^2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 1) + p2^2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 1))*r^2 - (k3*p2*r^6 + k2*p2*r^4 + k1*p2*r^2 + p2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 1))*x - (k3*p1*r^6 + k2*p1*r^4 + k1*p1*r^2 + p1*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 1))*y), v == -1/4*(k3*p1*r^8 + k2*p1*r^6 + k1*p1*r^4 + p1*r^2 - (k3*r^6 + k2*r^4 + k1*r^2 + 1)*y + sqrt(k3^2*r^12 + 2*k2*k3*r^10 + (k2^2 + 2*k1*k3)*r^8 + 2*(k1*k2 + k3)*r^6 + (k1^2 + 2*k2)*r^4 - 2*(4*p1^2 + 4*p2^2 - k1)*r^2 + 8*p2*x + 8*p1*y + 1)*(p1*r^2 - y))/((p1^2 + p2^2)*r^2 - p2*x - p1*y)], [u == -1/2*(k3^2*p2*r^14 + 2*k2*k3*p2*r^12 + (k2^2 + 2*k1*k3)*p2*r^10 + (2*k1*k2 - k3*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 2))*p2*r^8 + (k1^2 - k2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 2))*p2*r^6 - (4*p2^3 + (4*p1^2 + k1*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 2))*p2)*r^4 - p2*r^2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 1) - 4*p2*x^2 - (k3^2*r^12 + 2*k2*k3*r^10 + (k2^2 + 2*k1*k3)*r^8 + (2*k1*k2 - k3*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 2))*r^6 + (k1^2 - k2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 2))*r^4 - (4*p1^2 + 8*p2^2 + k1*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 2))*r^2 - sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) + 1)*x + 4*(p1*p2*r^2 - p1*x)*y)/((k3*p1^2 + k3*p2^2)*r^8 + (k2*p1^2 + k2*p2^2)*r^6 + (k1*p1^2 + k1*p2^2)*r^4 - (p1^2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 1) + p2^2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 1))*r^2 - (k3*p2*r^6 + k2*p2*r^4 + k1*p2*r^2 - p2*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 1))*x - (k3*p1*r^6 + k2*p1*r^4 + k1*p1*r^2 - p1*(sqrt(k3^2*r^12 + 2*k2*k3*r^10 + k2^2*r^8 + 2*k1*k3*r^8 + 2*k1*k2*r^6 + 2*k3*r^6 + k1^2*r^4 + 2*k2*r^4 - 8*p1^2*r^2 - 8*p2^2*r^2 + 2*k1*r^2 + 8*p2*x + 8*p1*y + 1) - 1))*y), v == -1/4*(k3*p1*r^8 + k2*p1*r^6 + k1*p1*r^4 + p1*r^2 - (k3*r^6 + k2*r^4 + k1*r^2 + 1)*y - sqrt(k3^2*r^12 + 2*k2*k3*r^10 + (k2^2 + 2*k1*k3)*r^8 + 2*(k1*k2 + k3)*r^6 + (k1^2 + 2*k2)*r^4 - 2*(4*p1^2 + 4*p2^2 - k1)*r^2 + 8*p2*x + 8*p1*y + 1)*(p1*r^2 - y))/((p1^2 + p2^2)*r^2 - p2*x - p1*y)]]
